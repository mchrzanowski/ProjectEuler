'''
Created on Jan 21, 2012

@author: mchrzanowski
'''

from time import time
from math import sqrt, ceil
from ProjectEulerLibrary import isPrime

LIMIT = 10000000

def main():
    
    start = time()
    
    primeSet = set([])
    
#    squaredDict = {}
#    for i in xrange(0, LIMIT):
#        squaredDict[i] = i ** 2 
        
    candidate   = 5
    solution    = 0
    
    while solution == 0:
        createdUsingPrime = False        
        if candidate not in primeSet and not isPrime(candidate):
           
            for i in xrange(1, int(ceil(sqrt(candidate))) + 1):
                remainderValue = candidate - 2 * i ** 2
                if remainderValue in primeSet or isPrime(remainderValue):
                    primeSet.add(remainderValue)
                    createdUsingPrime = True
                    break

            
            if not createdUsingPrime:
                print "found: ", candidate
                solution = candidate
                
        else:
            primeSet.add(candidate)
        
        candidate += 2
        
        if candidate % 100000 == 1:
            print candidate
        
#        if candidate > 10000000:
#            exit(0)
            
    print "Smallest number that breaks the conjecture: ", solution     
        
    end = time()
    
    print "Runtime: ", end - start, " seconds."
    
if __name__ == '__main__':
    main()